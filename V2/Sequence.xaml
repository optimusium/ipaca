<Activity mc:Ignorable="sap sap2010" x:Class="Sequence" this:Sequence.user_in_blacklist="False" this:Sequence.user_in_symptom="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="user_in_blacklist" Type="InArgument(x:Boolean)" />
    <x:Property Name="user_in_name" Type="InArgument(x:String)" />
    <x:Property Name="user_in_symptom" Type="InArgument(x:Boolean)" />
    <x:Property Name="email_out_status" Type="OutArgument(x:String)" />
    <x:Property Name="email_out_details" Type="OutArgument(x:String)" />
    <x:Property Name="user_in_symptom_list" Type="InArgument(x:String)" />
    <x:Property Name="user_in_blacklist_reason" Type="InArgument(x:String)" />
    <x:Property Name="user_in_attach_path" Type="InArgument(x:String)" />
    <x:Property Name="user_in_detect_time" Type="InArgument(x:String)" />
  </x:Members>
  <this:Sequence.user_in_name>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Sequence.user_in_name>
  <this:Sequence.user_in_symptom_list>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Sequence.user_in_symptom_list>
  <this:Sequence.user_in_blacklist_reason>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Sequence.user_in_blacklist_reason>
  <this:Sequence.user_in_attach_path>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Sequence.user_in_attach_path>
  <this:Sequence.user_in_detect_time>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Sequence.user_in_detect_time>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1318.4,4066.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Sequence_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="42">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1328.8,4001.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="imageLogin" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="emailed" />
      <Variable x:TypeArguments="x:String" Name="emailed_initial">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="email_module_config" />
      <Variable x:TypeArguments="sd:DataTable" Name="email_module_templates" />
      <Variable x:TypeArguments="x:String" Name="email_module_status" />
      <Variable x:TypeArguments="x:String" Name="email_module_details" />
      <Variable x:TypeArguments="x:Boolean" Name="emailedStatus" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Key="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="1287.2,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_1" KeyModifiers="Win">
      <ui:SendHotkey.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:SendHotkey.Target>
    </ui:SendHotkey>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_7" Text="[&quot;Anaconda Prompt&quot;+“[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="[&quot;conda activate ml1p13&quot;+“[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="[&quot;cd C:\Study\IPA\Group Project\ipaca-master&quot; + “[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_4" Text="[&quot;ipython&quot; + “[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_3" Text="[&quot;run face_recognize.py&quot; + “[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Key="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="1287.2,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_2" KeyModifiers="Win">
      <ui:SendHotkey.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:SendHotkey.Target>
    </ui:SendHotkey>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_8" Text="[&quot;Anaconda Prompt&quot;+“[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_6" Text="[&quot;cd C:\Study\IPA\Group Project\ipaca-master&quot; + “[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="1287.2,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_5" Text="[&quot;python temperature.py&quot; + “[k(enter)]”]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <AddToCollection x:TypeArguments="x:String" Collection="[emailed]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="1287.2,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[emailed_initial]" />
    <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1287.2,2436.8" sap2010:WorkflowViewState.IdRef="DoWhile_1">
      <DoWhile.Variables>
        <Variable x:TypeArguments="x:Int32" Name="tim" />
      </DoWhile.Variables>
      <DoWhile.Condition>True</DoWhile.Condition>
      <Sequence sap:VirtualizedContainerService.HintSize="1242.4,2274.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="1200.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:GenericValue">[TestVar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:GenericValue">["Fail"]</InArgument>
          </Assign.Value>
        </Assign>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1200.8,386.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Variables>
            <Variable x:TypeArguments="x:String" Name="TestVar" />
          </TryCatch.Variables>
          <TryCatch.Try>
            <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[imageLogin]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Study\IPA\Group Project\ipaca-master\stop.csv" sap:VirtualizedContainerService.HintSize="333.6,155.2" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2" />
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
          <TryCatch.Finally>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[TestVar]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Pass</InArgument>
              </Assign.Value>
            </Assign>
          </TryCatch.Finally>
        </TryCatch>
        <If Condition="[TestVar = &quot;Pass&quot;]" sap:VirtualizedContainerService.HintSize="1200.8,212" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="TestVar Passed" />
          </If.Then>
          <If.Else>
            <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Delay_1" />
          </If.Else>
        </If>
        <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="1200.8,424" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="3" RetryInterval="00:00:01">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[imageLogin]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Study\IPA\Group Project\ipaca-master\alert_bk.csv" sap:VirtualizedContainerService.HintSize="333.6,155.2" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
              </Sequence>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean" />
          </ui:RetryScope.Condition>
        </ui:RetryScope>
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[imageLogin]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1200.8,939.2" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1151.2,790.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ExistsInCollection x:TypeArguments="x:String" Collection="[emailed]" DisplayName="Exists In Collection" sap:VirtualizedContainerService.HintSize="1109.6,22.4" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_1" Item="[row(0).ToString]" Result="[emailedStatus]" />
                <If Condition="[row(1).Equals(&quot;99999&quot;) Or emailedStatus.Equals(True)]" sap:VirtualizedContainerService.HintSize="1109.6,635.2" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[row(1).ToString]" />
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="836,485.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <AddToCollection x:TypeArguments="x:String" Collection="[emailed]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="794.4,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[row(0).ToString]" />
                      <If Condition="[row(1).Equals(&quot;2&quot;)]" sap:VirtualizedContainerService.HintSize="794.4,330.4" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Blacklist Email" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="InformEmailModule.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="user_in_blacklist">
                                  <Literal x:TypeArguments="x:Boolean" Value="True" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_name">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(0).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="user_in_symptom">
                                  <Literal x:TypeArguments="x:Boolean" />
                                </InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="email_out_status">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="email_module_status" />
                                </OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="email_out_details">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="email_module_details" />
                                </OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_symptom_list">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_blacklist_reason">
                                  <Literal x:TypeArguments="x:String">SHN (Stay Home Notice)</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_attach_path">
                                  <Literal x:TypeArguments="x:String">email_data\test_attach.PNG</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_detect_time">
                                  <Literal x:TypeArguments="x:String">2020-04-16 9:58:40 PM</Literal>
                                </InArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="email_in_out_config">
                                  <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="email_module_config" />
                                </InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="email_in_out_templates">
                                  <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="email_module_templates" />
                                </InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="User Fever Symptom Email" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="InformEmailModule.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="user_in_blacklist">
                                  <Literal x:TypeArguments="x:Boolean" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_name">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(0).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="user_in_symptom">
                                  <Literal x:TypeArguments="x:Boolean" Value="True" />
                                </InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="email_out_status">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="email_module_status" />
                                </OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="email_out_details">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="email_module_details" />
                                </OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_symptom_list">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Fever &quot;+ row(2).ToString + &quot; °C&quot;" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_blacklist_reason">
                                  <Literal x:TypeArguments="x:String">SHN (Stay Home Notice)</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_attach_path">
                                  <Literal x:TypeArguments="x:String">email_data\test_attach.PNG</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="user_in_detect_time">
                                  <Literal x:TypeArguments="x:String">2020-04-16 9:58:40 PM</Literal>
                                </InArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="email_in_out_config">
                                  <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="email_module_config" />
                                </InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="email_in_out_templates">
                                  <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="email_module_templates" />
                                </InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
      </Sequence>
    </DoWhile>
  </Sequence>
</Activity>